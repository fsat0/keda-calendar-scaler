apiVersion: apps/v1
kind: Deployment
metadata:
  name: calendar-scaler
  namespace: myscaler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: calendar-scaler
  template:
    metadata:
      labels:
        app: calendar-scaler
    spec:
      containers:
      - name: scaler
        image: calendar-scaler:latest
        env:
        - name: DYNAMODB_ENDPOINT
          value: "http://dynamodb-local.myscaler.svc.cluster.local:8000"
        - name: AWS_ACCESS_KEY_ID
          value: dummy
        - name: AWS_SECRET_ACCESS_KEY
          value: dummy
        imagePullPolicy: IfNotPresent # test on kind cluster which loads images from local
        ports:
        - containerPort: 6000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dynamodb-local
  namespace: myscaler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dynamodb-local
  template:
    metadata:
      labels:
        app: dynamodb-local
    spec:
      containers:
      - name: dynamodb-local
        image: amazon/dynamodb-local:latest
        args: ["-jar", "DynamoDBLocal.jar", "-inMemory", "-sharedDb"]
        ports:
        - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: calendar-scaler
  namespace: myscaler
spec:
  ports:
  - port: 6000
    targetPort: 6000
  selector:
    app: calendar-scaler
---
apiVersion: v1
kind: Service
metadata:
  name: dynamodb-local
  namespace: myscaler
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    app: dynamodb-local
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scale-target
  namespace: myscaler
spec:
  replicas: 0
  selector:
    matchLabels:
      app: scale-target
  template:
    metadata:
      labels:
        app: scale-target
    spec:
      containers:
      - name: http
        image: nginx:latest
        imagePullPolicy: IfNotPresent